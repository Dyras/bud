/* eslint-disable */
//prettier-ignore
module.exports = {
name: "@yarnpkg/plugin-kjo",
factory: function (require) {
var plugin=(()=>{var A=Object.create,p=Object.defineProperty;var F=Object.getOwnPropertyDescriptor;var I=Object.getOwnPropertyNames;var T=Object.getPrototypeOf,E=Object.prototype.hasOwnProperty;var W=e=>p(e,"__esModule",{value:!0});var s=e=>{if(typeof require!="undefined")return require(e);throw new Error('Dynamic require of "'+e+'" is not supported')};var _=(e,t)=>{for(var i in t)p(e,i,{get:t[i],enumerable:!0})},J=(e,t,i)=>{if(t&&typeof t=="object"||typeof t=="function")for(let o of I(t))!E.call(e,o)&&o!=="default"&&p(e,o,{get:()=>t[o],enumerable:!(i=F(t,o))||i.enumerable});return e},r=e=>J(W(p(e!=null?A(T(e)):{},"default",e&&e.__esModule&&"default"in e?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e);var H={};_(H,{default:()=>G});var B=r(s("@yarnpkg/cli")),C=r(s("@yarnpkg/core")),O=r(s("@yarnpkg/shell")),c;(function(i){i[i.ERROR=1]="ERROR",i[i.OK=0]="OK"})(c||(c={}));var a=class extends B.BaseCommand{async getManifest(){return await C.Manifest.tryFind(this.context.cwd)}async $(t){let i;return console.log(`[kjo] ${t}`),i=await this.runTask(t),this.taskFailed(i)&&process.exit(1),Promise.resolve(0)}runTask(t){let[i,...o]=t.split(" ");return(0,O.execute)(i,o)}taskFailed(t){return Array.isArray(t)?t.filter(i=>i!==0).length>0:t!==0}async promiseOK(){return 0}};a.usage={category:"kjo"};var l=r(s("clipanion")),h=class extends a{constructor(){super(...arguments);this.cjs=l.Option.Boolean("-c,--cjs",!1);this.esm=l.Option.Boolean("-e,--esm",!1);this.clean=l.Option.Boolean("--clean",!1);this.force=l.Option.Boolean("--force",!1);this.verbose=l.Option.Boolean("--verbose",!0)}async execute(){let t=!this.cjs&&!this.esm;this.clean&&this.force&&console.error("--clean and --force are mutually exclusive"),this.clean&&(this.verbose=!1),(this.cjs||t)&&await this.$(`yarn tsc -b${this.verbose?" --verbose":""}${this.clean?" --clean":""}${this.force?" --force":""}`),(this.esm||t)&&await this.$(`yarn tsc -b tsconfig.esm.json${this.verbose?" --verbose":""}${this.clean?" --clean":""}${this.force?" --force":""}`),!this.clean&&await this.$("yarn kjo compile @roots/bud-support")}};h.paths=[["kjo","build"]];var P=r(s("clipanion")),u=class extends a{constructor(){super(...arguments);this.dfx=P.Option.Boolean("-d,--dfx",!1)}async execute(){if(this.dfx){await this.$("git clean -dfx"),await this.$("yarn cache clean");return}await this.$("yarn rimraf packages/**/.budfiles"),await this.$("yarn rimraf examples/*/node_modules"),await this.$("yarn rimraf packages/@roots/*/lib"),await this.$("yarn rimraf packages/@roots/*/node_modules"),await this.$("yarn rimraf node_modules"),await this.$("yarn cache clean")}};u.paths=[["kjo","clean"]];var q=r(s("clipanion")),f=class extends a{constructor(){super(...arguments);this.package=q.Option.String()}async execute(){await this.$(`yarn ts-node ./dev/tasks/compile/cjs ${this.package}`),await this.$(`yarn ts-node ./dev/tasks/compile/esm ${this.package}`)}};f.paths=[["kjo","compile"]];var m=r(s("clipanion")),d=class extends a{constructor(){super(...arguments);this.all=m.Option.Boolean("-a,--all",!1);this.prettier=m.Option.Boolean("-p,--prettier",!1);this.types=m.Option.Boolean("-t,--types",!1);this.eslint=m.Option.Boolean("-e,--eslint",!1);this.skypack=m.Option.Boolean("-s,--skypack",!1)}async execute(){let t=!this.prettier&&!this.skypack&&!this.eslint&&!this.types||this.all;(this.eslint||t)&&(await this.$("yarn eslint packages/**/src/**/*.{js,jsx,ts,tsx} --fix"),await this.$("yarn eslint dev/**/*.{js,jsx,ts,tsx} --fix")),(this.prettier||t)&&(await this.$("yarn prettier packages/**/src/**/*.{ts,js,tsx,jsx} --write --ignore-unknown --loglevel silent --no-error-on-unmatched-pattern"),await this.$("yarn prettier dev/**/*.{ts,js,tsx,jsx} --write --ignore-unknown --loglevel silent --no-error-on-unmatched-pattern"),await this.$("yarn prettier site/**/*.{ts,js,tsx,jsx,md,mdx} --write --ignore-unknown --loglevel silent --no-error-on-unmatched-pattern")),(this.skypack||t)&&await this.$("yarn workspaces foreach --no-private --exclude @roots/bud-typings -p -v run pkg")}};d.paths=[["kjo","lint"]];var g=r(s("clipanion")),b=class extends a{constructor(){super(...arguments);this.all=g.Option.Boolean("-a,--all",!1);this.workers=g.Option.String("-w,--workers","50%");this.update=g.Option.Boolean("--update",!1)}async execute(){await this.$(`yarn jest --maxWorkers=${this.workers} ${this.update?"--updateSnapshot":"--coverage"}`)}};b.paths=[["kjo","test"]];var n=r(s("clipanion")),S=r(s("@yarnpkg/fslib")),R=r(s("@yarnpkg/core"));var x=class{get string(){let t=`${this.major}.${this.minor}.${this.patch}`;return this.tag&&this.tag!=="stable"&&this.tag!=="latest"?t.concat(`-${this.tag}${this.increment?`.${this.increment}`:""}`):t}get object(){return{major:this.major,minor:this.minor,patch:this.patch,increment:this.increment,tag:this.tag}}get setCommand(){let t=`yarn workspaces foreach --no-private version ${this.string}`;return this.tag&&(t=t.concat(` --tag ${this.tag}`)),t}constructor(t){let[,i,o,M]=t.match(/(\d*)\.(\d*)\.(\d*)/);this.major=i,this.minor=o,this.patch=M;let $=t.match(/.*-(next|feature-\w*)\.?/);this.tag=$&&$[1]?$[1]:"stable";let j=t.match(/.*-(next|feature-\w*)\.(\d*)?/);this.increment=j&&j[2]?j[2]:null}setTag(t){if(t!=="stable"&&t!=="latest"&&t!=="next"&&!t.startsWith("feature-"))throw new Error(`Invalid tag specified: ${t}`);this.tag=t}};var y=class extends a{constructor(){super(...arguments);this.version=n.Option.String("-v,--version",{required:!1});this.major=n.Option.String("--major",{required:!1});this.minor=n.Option.String("--minor",{required:!1});this.patch=n.Option.String("--patch",{required:!1});this.tag=n.Option.String("-t,--tag",{required:!1});this.increment=n.Option.String("-i,--increment",{required:!1});this.set=n.Option.Boolean("-s,--set",{required:!1});this.publish=n.Option.Boolean("-p,--publish",{required:!1})}async execute(){let{raw:t}=await R.Manifest.tryFind(this.context.cwd),i;if(this.version?i=new x(this.version):i=new x(t.manifest.version),this.major&&(i.major=this.major),this.minor&&(i.minor=this.minor),this.patch&&(i.patch=this.patch),this.increment&&(i.increment=this.increment),this.tag&&i.setTag(this.tag),t.manifest.version=i.string,this.set){S.xfs.writeJsonSync(this.context.cwd.concat("/package.json"),t),process.exit(),await this.$(i.setCommand);return}if(this.publish){console.log(`I want to publish version ${i.string}, tagged ${i.tag}`);return}console.log(`${i.string}`)}};y.paths=[["kjo","version"]];var K=r(s("clipanion")),k=class extends a{constructor(){super(...arguments);this.dfx=K.Option.Boolean("-d,--dfx",!1)}async execute(){await this.$("yarn install --immutable"),await this.$("yarn kjo build --verbose"),await this.$("yarn kjo lint --eslint --skypack"),await this.$("yarn kjo test --unit"),await this.$("yarn kjo test --integration"),await this.$("yarn")}};k.paths=[["kjo","make"]];var v=r(s("clipanion")),w=class extends a{constructor(){super(...arguments);this.site=v.Option.Boolean("-s,--site",!1);this.readme=v.Option.Boolean("-r,--readme",!1)}async execute(){let t=!this.site&&!this.readme;(this.site||t)&&await this.$("yarn workspace @roots/bud-docs run docusaurus build"),(this.readme||t)&&await this.$("yarn ts-node ./dev/readme")}};w.paths=[["kjo","md"]];var z={hooks:{afterAllInstalled:()=>{console.log("What a great install, am I right?")}},commands:[h,u,f,d,k,w,b,y]},G=z;return H;})();
return plugin;
}
};
