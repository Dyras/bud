/* eslint-disable */
//prettier-ignore
module.exports = {
name: "@yarnpkg/plugin-kjo",
factory: function (require) {
var plugin=(()=>{var $=Object.create,c=Object.defineProperty;var A=Object.getOwnPropertyDescriptor;var M=Object.getOwnPropertyNames;var q=Object.getPrototypeOf,F=Object.prototype.hasOwnProperty;var I=t=>c(t,"__esModule",{value:!0});var a=t=>{if(typeof require!="undefined")return require(t);throw new Error('Dynamic require of "'+t+'" is not supported')};var R=(t,e)=>{for(var s in e)c(t,s,{get:e[s],enumerable:!0})},S=(t,e,s)=>{if(e&&typeof e=="object"||typeof e=="function")for(let i of M(e))!F.call(t,i)&&i!=="default"&&c(t,i,{get:()=>e[i],enumerable:!(s=A(e,i))||s.enumerable});return t},n=t=>S(I(c(t!=null?$(q(t)):{},"default",t&&t.__esModule&&"default"in t?{get:()=>t.default,enumerable:!0}:{value:t,enumerable:!0})),t);var G={};R(G,{default:()=>E});var j=n(a("@yarnpkg/cli")),v=n(a("@yarnpkg/core")),w=n(a("@yarnpkg/shell")),O=1,m=0,r=class extends j.BaseCommand{async getManifest(){return await v.Manifest.tryFind(this.context.cwd)}async $(e){let s=await e.reduce(this.sequential.bind(this),this.promiseOK());return this.taskFailed(s)&&process.exit(O),Promise.resolve(m)}async sequential(e,s){let i=await e;return this.taskFailed(i)?O:Array.isArray(s)?this.$(s):this.runTask(s)}runTask(e){let[s,...i]=e.split(" ");return(0,w.execute)(s,i)}taskFailed(e){return Array.isArray(e)?e.filter(s=>s!==m).length>0:e!==m}async promiseOK(){return m}};r.usage={category:"kjo"};var x=n(a("clipanion")),l=class extends r{constructor(){super(...arguments);this.cjs=x.Option.Boolean("-c,--cjs",!1);this.esm=x.Option.Boolean("-e,--esm",!1);this.commands={all:"yarn workspaces foreach --topological-dev --no-private --exclude @roots/bud-typings -i -p -v run build",cjs:"yarn workspaces foreach --topological-dev --no-private --exclude @roots/bud-typings -i -p -v run build:cjs",esm:"yarn workspaces foreach --topological-dev --no-private --exclude @roots/bud-typings -i -p -v run build:esm"}}async execute(){let e=[];this.cjs&&e.push(this.commands.cjs),this.esm&&e.push(this.commands.esm),!this.cjs&&!this.esm&&e.push(this.commands.all),await this.$(e)}};l.paths=[["kjo","build"]];var P=n(a("clipanion")),p=class extends r{constructor(){super(...arguments);this.dfx=P.Option.Boolean("-d,--dfx",!1);this.commands={rm:["rm -rf **/.budfiles","rm -rf **/node_modules","rm -rf examples/*/dist","rm -rf examples/sage/public/*","rm -rf examples/sage/storage/bud/*","rm -rf packages/*/*/lib","rm -rf packages/*/*/types","yarn cache clean"],dfx:["git clean -dfx","yarn cache clean"]}}async execute(){this.dfx?await this.$(this.commands.dfx):this.$(this.commands.rm)}};p.paths=[["kjo","clean"]];var u=n(a("clipanion")),d=class extends r{constructor(){super(...arguments);this.prettier=u.Option.Boolean("-p,--prettier",!1);this.eslint=u.Option.Boolean("-e,--eslint",!1);this.skypack=u.Option.Boolean("-s,--skypack",!1);this.commands={eslint:["yarn eslint packages/**/src/**/*.{js,jsx,ts,tsx} --fix","yarn eslint dev/**/*.{js,jsx,ts,tsx} --fix","yarn eslint site/**/*.{js,jsx,ts,tsx} --fix"],prettier:["yarn prettier packages/**/src/**/*.{ts,js,tsx,jsx} --fix --ignore-unknown --loglevel silent --no-error-on-unmatched-pattern","yarn prettier dev/**/*.{ts,js,tsx,jsx} --fix --ignore-unknown --loglevel silent --no-error-on-unmatched-pattern","yarn prettier site/**/*.{ts,js,tsx,jsx,md,mdx} --fix --ignore-unknown --loglevel silent --no-error-on-unmatched-pattern"],skypack:["yarn workspaces foreach --no-private --exclude @roots/bud-typings -p -v run pkg"]}}async execute(){let e=[];this.eslint&&e.push(Object.values(this.commands.eslint)),this.prettier&&e.push(Object.values(this.commands.prettier)),this.skypack&&e.push(Object.values(this.commands.skypack)),!this.eslint&&!this.prettier&&!this.skypack&&e.push(Object.values(this.commands).reduce((s,i)=>[...s,...i]),[]),await this.$(e)}};d.paths=[["kjo","lint"]];var f=n(a("clipanion")),h=class extends r{constructor(){super(...arguments);this.unit=f.Option.Boolean("-u,--unit",!1);this.integration=f.Option.Boolean("-i,--integration",!1);this.workers=f.Option.String("-w,--workers","50%");this.commands={unit:['yarn jest --coverage --testPathIgnorePatterns="tests/integration" --testPathIgnorePatterns="tests/util" --maxWorkers={{workers}}'],integration:["node ./jest.integration.js"]}}async execute(){let e=[];this.unit&&e.push(this.commands.unit),this.integration&&e.push(this.commands.integration),!this.unit&&!this.integration&&e.push(Object.values(this.commands).reduce((s,i)=>[...s,...i]),[]),await this.$(e)}runTask(e){return super.runTask(e.replace("{{workers}}",this.workers))}};h.paths=[["kjo","test"]];var k=n(a("clipanion")),C=n(a("@yarnpkg/fslib")),g=class extends r{constructor(){super(...arguments);this.version=k.Option.String("-v,--version",{required:!1});this.tag=k.Option.String("-t,--tag",{required:!1})}async execute(){var s,i;let{raw:e}=await this.getManifest();e.manifest.version=(s=this.version)!=null?s:e.manifest.version,e.manifest.tag=(i=this.tag)!=null?i:e.manifest.tag,C.xfs.writeJsonSync(this.context.cwd.concat("/package.json"),e),this.version&&await this.$([`yarn workspaces foreach --no-private version --deferred ${e.manifest.version}`]),!this.version&&!this.tag&&console.log(`${e.manifest.version}`)}};g.paths=[["kjo","version"]];var B=n(a("clipanion")),y=class extends r{constructor(){super(...arguments);this.dfx=B.Option.Boolean("-d,--dfx",!1)}async execute(){let e=["yarn install --immutable","yarn kjo clean".concat(this.dfx?"--dfx":""),"yarn kjo build","yarn kjo test","yarn","yarn kjo lint","yarn kjo gen"];await this.$(e)}};y.paths=[["kjo","make"]];var b=n(a("clipanion")),o=class extends r{constructor(){super(...arguments);this.site=b.Option.Boolean("-s,--site",!1);this.readme=b.Option.Boolean("-r,--readme",!1);this.commands={site:["yarn ts-node ./dev/site","yarn docusaurus build"],readme:["yarn ts-node ./dev/readme"]}}async execute(){let e=[];this.readme&&e.push(this.commands.readme),this.site&&e.push(this.commands.site),!this.site&&!this.readme&&e.push(Object.values(this.commands).reduce((s,i)=>[...s,...i]),[]),await this.$(e)}};o.paths=[["kjo","gen"]],o.usage={category:"kjo",description:"Generate site files and repository README.mds",examples:[["Generate everything","yarn kjo gen"],["Generate site files","yarn kjo gen --site"],["Generate repo readmes","yarn kjo gen --readme"]]};var T={hooks:{afterAllInstalled:()=>{console.log("What a great install, am I right?")}},commands:[l,p,d,y,o,h,g]},E=T;return G;})();
return plugin;
}
};
