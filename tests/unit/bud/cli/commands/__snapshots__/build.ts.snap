// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Build Command has expected flags 1`] = `
Object {
  "cache": Object {
    "allowNo": true,
    "default": true,
    "description": "cache built modules to the filesystem.",
    "parse": [Function],
    "type": "boolean",
  },
  "ci": Object {
    "allowNo": false,
    "description": "non raw mode tty interoperable output",
    "parse": [Function],
    "type": "boolean",
  },
  "devtool": Object {
    "description": "specify source-map type",
    "input": Array [],
    "multiple": false,
    "parse": [Function],
    "type": "option",
  },
  "discover": Object {
    "allowNo": false,
    "description": "automatically utilize installed extensions",
    "parse": [Function],
    "type": "boolean",
  },
  "dist": Object {
    "description": "specify directory to emit assets to",
    "input": Array [],
    "multiple": false,
    "parse": [Function],
    "type": "option",
  },
  "hash": Object {
    "allowNo": true,
    "description": "hash compiled filenames",
    "parse": [Function],
    "type": "boolean",
  },
  "help": Object {
    "allowNo": false,
    "char": "h",
    "description": "show CLI help",
    "parse": [Function],
    "type": "boolean",
  },
  "html": Object {
    "allowNo": true,
    "description": "generate an html template",
    "parse": [Function],
    "type": "boolean",
  },
  "install": Object {
    "allowNo": false,
    "char": "i",
    "description": "ensure peer dependencies are installed",
    "parse": [Function],
    "type": "boolean",
  },
  "log": Object {
    "allowNo": false,
    "description": "log to console",
    "parse": [Function],
    "type": "boolean",
  },
  "manifest": Object {
    "allowNo": true,
    "default": true,
    "description": "produce a manifest",
    "parse": [Function],
    "type": "boolean",
  },
  "minimize": Object {
    "allowNo": true,
    "char": "m",
    "description": "minimize file size of compiled assets",
    "parse": [Function],
    "type": "boolean",
  },
  "publicPath": Object {
    "description": "specify public path",
    "input": Array [],
    "multiple": false,
    "parse": [Function],
    "type": "option",
  },
  "runtime": Object {
    "allowNo": true,
    "description": "Create a runtime chunk",
    "parse": [Function],
    "type": "boolean",
  },
  "src": Object {
    "description": "specify directory containing source assets",
    "input": Array [],
    "multiple": false,
    "parse": [Function],
    "type": "option",
  },
  "target": Object {
    "char": "t",
    "default": Array [],
    "description": "limit compilation to this compiler",
    "input": Array [],
    "multiple": true,
    "parse": [Function],
    "type": "option",
  },
  "vendor": Object {
    "allowNo": true,
    "description": "create separate chunks for vendor and app code",
    "parse": [Function],
    "type": "boolean",
  },
}
`;
